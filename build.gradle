apply plugin: 'java'

repositories {
    mavenLocal() // TODO: use lib/ instead?
    maven { url 'https://mvn.freenetproject.org' }
    jcenter()
}

dependencies {
    compile project(':fred')
}

import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform
def fredversion
task buildInfo {
    try {
        def gitcmd = "git"
        if (DefaultNativePlatform.getCurrentOperatingSystem().isWindows()) {
            gitcmd = "C:\\Program Files\\Git\\bin\\git.exe"
        }
        def cmd = "${gitcmd} describe --always --abbrev=4 --dirty"
	def proc = cmd.execute(null, new File("fred"))
	fredversion = proc.text.trim().substring(6,10)
    } catch (java.io.IOException e) {
        fredversion = "@unknown@"
    }
}

task updateSetupFile {
	doLast {
		def file = new File("fred_version.iss")
		file.write("#define AppVersion \"0.7.5 build ${fredversion}\"\r\n")

		file = new File("fred_deps.iss")
		file.delete()
		configurations.compile.resolvedConfiguration.resolvedArtifacts.each {
			dep -> switch(dep.getName()) {
				case "freenet":
					file.append("Source: \"freenet.jar\"; DestDir: \"{app}\"; Flags: ignoreversion; AfterInstall: FreenetJarDoAfterInstall\r\n"); break;
				case "freenet-ext":
					file.append("Source: \"${dep.getFile()}\"; DestDir: \"{app}\"; DestName: \"freenet-ext.jar\"; Flags: ignoreversion; AfterInstall: FreenetJarDoAfterInstall\r\n"); break;
				default:
					file.append("Source: \"${dep.getFile()}\"; DestDir: \"{app}\"; Flags: ignoreversion;\r\n"); break;
			}
		} 
	}
}
